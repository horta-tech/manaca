%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.6 (Build 17G65) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 263 66
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 263 66
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: BXFFJB+Lato-Regular
%!FontType1-1.0: BXFFJB+Lato-Regular 1.0000.1.1040
14 dict begin/FontName /BXFFJB+Lato-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /e put
dup 35 /u put
dup 36 /space put
dup 37 /d put
dup 38 /i put
dup 39 /n put
dup 40 /h put
dup 41 /r put
dup 42 /o put
dup 43 /a put
dup 44 /comma put
dup 45 /s put
dup 46 /m put
dup 47 /p put
dup 48 /l put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2000 -188 1 index div -365 2 index div 2233 3 index div 1837 5 -1 roll div]cvx def
/sfnts [<



3D210104032F05020607021E00040302030402320002000706020701002600030305010024000505141F0000000C1F0801060601010024000101120120081B4BB06C5058403B210104032F05020607021E000403020304023200050003040503010026000200070602070100260000000F1F0801060601010024000101150120071B4048210104032F05020607021E00040302030402320000060106000132000500030405030100260002000706020701002608010600010601002308010606010100240001060101002108595959B0382B212322262F010E0323222E0235343E023735342623220E022322262F013E0133321E021501323E0237350E0315141E02037A4F1A200514284C545F3A3B674C2D4293EEAC65634159412F17121B082054C27655845A2EFE322F4E453F1E7BAC6C311A2C3C101A5E24392714214265453C6F5637044F7679212921130E39515038648E55FDE513233220D3041F32442A283A251100000000020048FFF203C505C100160025013B4016181701001F1D172518251514110F07050016011608072B4BB0225058402E130105021B1A03030405021E0003030D1F00050502010024000202141F070104040001002401060200000C0020061B4BB05F50584032130105021B1A03030405021E0003030D1F00050502010024000202141F060100000C1F0701040401010024000101150120071B4BB06C50584030130105021B1A03030405021E000200050402050100260003030D1F060100000F1F0701040401010024000101150120061B4BB08D5058402F130105021B1A03030405021E000200050402050100260701040001040101002506010000030000240003030D0020051B403A130105021B1A03030405021E0002000504020501002607010400010401002300030601000103000100260701040401010024000104010100210659595959B0382B21222F010E0123222E0235343E023332161711331125323637112E0123220615141E02035B260A1041A76C578E64363C71A2675D8434B2FE3D5783373175478E98224260257B4F5F4382C27E70C18E513F390232FA3F82504901EA4235CABB638D5B2A00000002004AFFF203C704050024002D01104018262501002928252D262D1C1A14120F0D09070024012409072B4BB0095058403416010203011E000301020103023200060001030601010026080105050001002407010000141F00020204010024000404120420071B4BB05F5058403416010203011E000301020103023200060001030601010026080105050001002407010000141F00020204010024000404150420071B4BB06C5058403216010203011E00030102010302320701000801050600050100260006000103060101002600020204010024000404150420061B403B16010203011E000301
0201030232070100080105060005010026000600010306010100260002040402010023000202040100240004020401002107595959B0382B01321E0215140623211E0333323E0233321F010E0323222E0235343E021722060721342E0202235B9A703F1219FD5E02305474484361462F11160C32215C69703769B18148417AB072819412022722425F04053D73A96C2A1C608E5F2F1F241F1141283B26134789CA836AB8874D8395843E674B2900000000010092000003DD05C1001500F5401000000015001512100D0C0705020106072B4BB05F505840211403020203011E0000000D1F00030301010024000101141F05040202020C0220051B4BB06C5058401F1403020203011E000100030201030100260000000D1F05040202020F0220041B4BB08D505840211403020203011E000100030201030100260504020202000000240000000D0220041B4BB0E85058402A1403020203011E00000102000000230001000302010301002600000002000024050402020002000021051B402E1403020403011E00020402350000010400000023000100030401030100260000000400002405010400040000210659595959B0382B331133113E0133321E02151123113426232206071192B2419E67537F552CB2696C4F893A05C1FDAC455337658E56FD7B0285737F4C41FD1600000200820000018005B30003001700C2400E000014120A0800030003020105072B4BB0095058401900020203010024000303111F040101010E1F0000000C0020041B4BB05F50584019000202030100240003030D1F040101010E1F0000000C0020041B4BB06C5058401B000202030100240003030D1F04010101000000240000000F0020041B4BB08D5058401804010100000100000025000202030100240003030D0220031B4023000300020103020100260401010000010000230401010100000024000001000000210459595959B0382B0111231113140E0223222E0235343E0233321E020158B2DA15232E1A1A2D231414232D1A1A2E231503F5FC0B03F5013E1A2D231414232D1A1A2F231414232F000000000100A60000015805C10003006F400A000000030003020103072B4BB05F5058400D020101010D1F0000000C0020021B4BB06C5058400D020101010D1F0000000F0020021B4BB08D5058400F00000001000024020101010D0020021B401902010100000100002302010101000000240000010000002103595959B0382B011123110158B205C1FA3F05C1000000010092000005EF0405002A011B40160000002A002A272522211C1A1716110F0907030109072B4BB01E50584021290B05030304011E060104040001002402010200000E1F0807050303030C0320041B4BB05F50584025290B05030304011E0000000E1F060104040101002402010101141F0807

010024000202151F06010303100320061B4BB049505840321B1A0503050415010205021E0000000E1F0701040401010024000101141F00050502010024000202151F06010303100320071B4BB05F505840341B1A0503050415010205021E0701040401010024000101141F00050502010024000202151F06010303000100240000000E0320071B4BB06C5058402F1B1A0503050415010205021E00010701040501040100260000060103000300002500050502010024000202150220051B40391B1A0503050415010205021E0000040300010023000107010405010401002600050002030502010026000000030000240601030003000021065959595959B0382B131133321F013E0133321E0215140E02232226271101220607111E0133323635342E02926A260A0F41A76D578E64363C70A3665E853301115783373175488D98234260FEA9054C25784F604383C27E70C18D513E39FE4004CE5049FE164236CABB638E5B2A000000010092000002FA0407001600E140100000001600161311100E0A08030106072B4BB01A505840210C0102001506020402021E0301020200010024010100000E1F050104040C0420041B4BB05F5058402C0C0103001506020402021E00020304030204320000000E1F00030301010024000101141F050104040C0420061B4BB06C5058402C0C0103001506020402021E00020304030204320001000302010301002600000004000024050104040F0420051B40350C0103001506020402021E000203040302043200000304000100230001000302010301002600000004000024050104000400002106595959B0382B33113332161F013E01333216170706232226232206071192661D16040C3499672A441D1707180E3A345D7D2A03F5161B9E6A7713118519136C67FD7B000001003EFFF0030F0405003C00C6400E3A38272522201B190806030106072B4BB05F505840333C0101051D010204021E00000103010003320003040103043000010105010024000505141F00040402010024000202120220071B4BB06C505840313C0101051D010204021E0000010301000332000304010304300005000100050101002600040402010024000202150220061B403A3C0101051D010204021E0000010301000332000304010304300005000100050101002600040202040100230004040201002400020402010021075959B0382B010623222E0223220E0215141E0615140E0223222627373E0133321E0233323E0235342E0635343E023332161702D60C190F26374C342D48331B2D4A5E635E4A2D32628E5D6AAC3C2A081612122839513D344E34192D4A5F635F4A2D305C8656649F3A034E16161B171728351F2734261D21283C573D467757324536440D0E1C221C1B2E3C222A37271D20293E5B413A6B51303F37000000

00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/S 3 def
/a 4 def
/d 5 def
/e 6 def
/h 7 def
/i 8 def
/l 9 def
/m 10 def
/n 11 def
/o 12 def
/p 13 def
/r 14 def
/s 15 def
/u 16 def
/caron.salt 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.0005 0 0 0.0005 0 0 ] def
/FontBBox{-188 -365 2233 1837}def
/UniqueID 4102386 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BC64A62485D7C863002D39D4194FF17CC8AA420E752C449BD1094F4BBC2EC74BFB60BB37A22E37EC320BC5831E981250F56147633F4A47AD0B0848B2F47D7FF43C0475EE96EB6C739E5305026B3B138FBFA0B88FD2B03095A6C0BEB268081FD490A479F3B49D972EC3533B20CC2F4E5BDEA854CF03D61A98157F5EA52E01BD28225742A3D07AA926E4207D709BBC7BEE0C584F2E6EFBDA2505272F84916AFB0714B409B76D1828BE6DC604934FE9D668B5A3362AA1AC4A8ECA1B812B2C0C4E3AD980F874C2C38909B8341EDDC119735CB1597D3BA546FEC21F0D7BCCE11C19BED871815D5187AE86066AEB33E0DB3E8D055EC1C49AB47D42128EB60404BF2FD8DF5710F734D3EE8FA864D7055C2195A124C1E64E1C388AA5302DF61AEE79BE04E3F1E1D7E550235C97629E89B90C1D862F26640E15CFB386B5506FAFBD2A1EB1B69785C84948827BBB0557B4AA17193B936C319B6638CEC6EA99CF0D222C6301B09EE4F37B154564056BF84F2CAEFA772804AC2A4538E10D4BF5165846663B41271BC85F13D2DC719810FDE0D5FD35974306332ED7FCD6009A909B5FED898EF9F9A47C0B237D49B1796E8FF29C2C01C6E37803B28CD9B9B1385A51C2E232FE215BA5082B6305155C8D27A7AF8744CED9619B0A0CD8187955051A1A3F96DE2A793B96C26554246EF489C55B6F21075AE60F224313C450E92D7B8179AC7B18ED25433F8753289E3AC4A6C5A70CA9026216B833AA1E3C4DA32710C311EB434FAD29



33476899A4FEDC23358E643E0648939BE7141BE51D44997470FCFD31C1166DEFE4D25AADC1DF2943CAECCE24289CC5EF5AF2DAB9944A7D8DDA9CFB6E095BBDB165578675B04FC027EE1FB1A3B1CBBFC1B6D67208BF335854651745A459FCBFB9AA3D1E47A3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/BXFFJB+Lato-Regular cguidfix
/F1.1/BXFFJB+Lato-Regular renmfont
%RBIBeginFontSubset: EVVRXT+Como-Bold
%!FontType1-1.0: EVVRXT+Como-Bold 001.001%%CreationDate: 4/23/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.001) readonly def/FullName (Como Bold) readonly def/FamilyName (Como Bold) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -55 def/UnderlineThickness 56 defend readonly def/FontName /EVVRXT+Como-Bold def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /m putdup 34 /a putdup 35 /n putdup 36 /c putdup 37 /aacute putreadonly def/FontBBox {-176 -227 1179 951} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF1D53D6B9100AAEC167CC64652D3CF188AB56A9858B011FCA14E6C1279E0772F99EB26E1030F644164F80397AD71BB1175093F89299CCFFA32DB471A263CF374D75429067CFD576B4919DCCC14827C8A8E06A669E6173FED402DDF9275C102F9E5B29C016F8B3105286152B5A4B908BAB8031E0A81E6E595C78A09B5C76C6040B5EEDA326274D7EC36991F0E695596EABC3C37971BABD578FC861218D47794B62A35913BBDBB160652DA26980DC4A7A13922331251FBC09E67220476C0AEAF206BC660619C4709FB200BE4D383E00310A2C3A962F42A9459CB90E8C5ACC4A21659A5921A68D6EF0632682D7EA39864F56219BE421B16A40955740F92AFEEDC79595CFA38DA423500EC2677E9A253C63EC99B44243BDBEEA0EFCD4468E0E351127C4518588F7783B191F96E940AA917BAF8A1617CB758EAE73CA4EF26C1DF8A5A414C4C140192A9498CFFA621E7F7519F1E8F1D0DEE8DB3D9ADD967DE594B9B9B3C8711DCF38CD104A05DF349EF6FC7D4A5ED24B05CE563996888762735A9EDCAEE69F2F905ED3AE629132880ACA23E3B823BBF6BC30CB9985E45292B9841A7B8658AC5F9FC3A62DFB9DE51144B4E249383B5CB264E78B462308082AA3E9D7762F0D6CC69DFB1D78C0364B299191EA442F103500BAD7FCB400D6B0BECB66F2171684A4CBC634CF32908DFAFBD9DDA8832D91069FF39DC8A7B4A147214BE2D95E00B5198D0E6ECD325B326A184CD91827A9917E5FFDD97B8DEE78143FB339808153D6128B47DC0E61F950379A53601282A0E9E1C6ABC1F9816A2CCE566536BD08B5F2CB251558C2A7D7179924BD5A25E3A1654E65BCF2972849670701C65BFF381FFED63CAF274B95D72FB1CB130CA34A26F75FD28B0C9AC38AABE01761627E6BE0F5AF9926D68CB5289922015A0BD0D797FB7CC136ED06224F58C7E4309D94D527226C600956ACCE1FF613B7A46166B47EE9693E5B966CD05FB1B2CA8625E808CD64056A97A44CA6B72541C49488BC76C67AE91FE38F3C6CDC4EA72B6BCAB6EC8E469A7EC16A2F4CABCA922813654A43FF6A6AA655E19AF95B17DB11B4CB3294CC03CAED555E17C42C0C48056F69F8B60F1B10B111E61A291D996DAF234AE221E549F8C1E884E660F4B1878127D7E30A477C77913C7BE1BB0EC3D47BAA145C717588FF85321B09C1643E3042B8C5A3ACAAC7CB63DC6E580EF949A1B7CBDE20B8D1D19C1013844348DBFB4FF243CDC88A8CF6EFBCD13ADFE9B12F1FFFE3183CE384FA0C9378E6812264A987AA259E7096BAAE7B0CD65FD84B47188773A3E27B9F11F275F3E9787BE62173B2D4B6115A73103774CCBB59EB040E74FEF433557777A76052512E6E6454B3EEB15597B8D09723EB06ABD4C12E56E9DA58D7869B08A0BA0A247E6C2B709E85EDA4F942C95BADAA9B845CA4F5A16FA7BAE4A366F40C1A0BBF0EBCDA1A2116F3966B79EF1D7D386EE008865BF258FBD42065C6C5E8CFB324544A0C1C3AA60106C02F4CD6E5768AC4119A741945ECE30753D76C557D8C054C8D5D9D22AF216A82CFEB9D3B65D53367A6B713343A993F2AB78C97C82287E6F6033019CDA78051ECB2D688DCFF8D94C3F5E730D25787605772F6A8B7BE97EB8E2D4F75BAA6BBD8F1C07D4671CD1C66E50757D480B56351386067E2F8A211131C712BFA8528E93E15D4D45CAB84CA4E0CE40A8AD3F90AB8BAD28DBB4AAEE3E2A2DEF7C1E959B72FBA4C08DCE6CF5746F9F687A51FB49CC1F06AA2CA5EC36AD28D4B670A63AA7656B3F588C7E48FC29B6D7AB8D811DBF4B44FA0F579FD727D9E5B6C970C8F3D2E5DF96799A6D0BE6862A7E03CB920138A23100C13F18CF33D3F61C16EDAA4A23475AFFD57381B27F3BD9B1AD5BCD9E0CA1F87BFA672FA52A39AA33092CC08BF2F1FD9AD62B2B8E47654D5ACF50662C8EDCE597D97CB8F13AC3417C4C5E5850B4C316F24EE37D5EB357E8880EA4BFB829DEBEB13F30AD229CF11781A5E9FA9D1ADD25151519C446637F3D6E634EB30A0317E057B42876B77A96B4C30352A71E26980B209BFDDCF5E14E7679E9891AB70A6ECA77F871124A8668DAD2123E54F8B919D98D0A9E02F4A9731039604492AFF6F998265EA7739DD71C5C311AD2395758A84E42E582D04B1FACE734E87F9049D8C5EA93AFF0A9882BEE71BA182A13C372F520F1B7EB7226CCE8B34E0ADD83AECA05C514E493FCE992D928081F5CC48D306568C5C477DFE76CA6C574849BF9F930DCA3E891B0625A1C55A4D37C82758B0A2E551EA7BACE29718457E2E40C61306B47CE0C5DEBB6D6387A671FE48CF833934FAE3B2F240FAAAAB9DFEEC7DC5E0051249E0981E34E49333A9691AAB919FD7DCAC32ABE1E2AC7653E5BA476FBC7C0D65A2D8A0871786B935F6B295BE0C55559A288401DCA1EB846477FBF4CBE1C5E2F6F0D9D9913236DDB4BD961B3FEE600D0569014BE3B19155B6D72B773D77C37399665F2FF76228E493FE91F2AB43F8FB6722982D270908F5E02A80D38154D1F8648C91D680826BF0F31181CFBBD1FAD0E9E6147F63252E0AD6280B40DB8E0EEA6C218103E060BD88C4EBECCAED001791C74514DE6C055C77F1E72774A8D704724B65B14DFFFBCC0F1E0B1F6A00ED316B08A0254FC5F95459A5022919B12B9ADCD539123B2EBCD3B2672052BECC9F61726C8FEE7D9B0A82E4E7B729B7D299F717AFC8692C3E3252A70446522DA515B41673959D6EC149976748A88C092384C48A6DB764F2FDF2B395242AF011C79449AECB21F90F68DE3D34A78F3B79D4B140C932620A8E524CF3C8627E5EE57C1B59BD2853B66AB76CEBAACC9120E17E5D8F895BD0F25C157420E1449ADA82608ED6570E007BF1999DF16EB81766BD0B7AC1ABEE49A6F507C3EF92BC5F050C0B1607B2E9731F92821546CC06C53081202B8E2AF15E8D6CB37D7DD54CFCD2C6D8AF48264493074E9BF3A90F1944130A973C585BE2E03FD3192BEC5393C79AE397F7870AA0F18D1332F6AF06B5808767122B7900C2D45E7C7EDD2E5CBD9569B2F31BF46FD078346D8D62FF63BCB1D0C63764A50E298B0B8E52E3912B139EF9997CDCAF1818D1310621753764957B089EAE18946D8A313083AB9D9A61B895C551C951A2822115CF5084EFCEB6CB86C6EFA0DF6DA0364333C06CDDEFA8B88196F142960A55C5DA6B8C78BBD49C28ADEDB7A193F67CBD80F5403612FF9F894887D6A869EAF1F021B6266A12058F60C0D1A9828F9FC42B2C421E66CA8D0B1EF49D9E4DC6332649AF1B83F9064053E345A810B0BDFA46408B7DE3EFC15CDB3ED3672F9645E08618F0EA6DA00547BC69EFB65C99BB0B6F1C98F8989DA8D7D77912D63FEE7C519FBBB2BB035A2206F98C5FC364A824A1AC09757385E860AAA5A3C23A98ABEAA148E22882A7F374F9E8E2D89D298785B5EBFE8736B05D49701B2A693C568AFA56F2AB47B531CD244D20BB09ECA303027BEC43FAB8208111EE15FAA4735543CEE8F4A662BB6A0F922EA782E8DF6D67C68ECB2CACF13C0B1BA95BAB7444094593700D03DD279ED42E748A2C0024FF81FFCC341FA41249FD5D57C310CB6DF814ABDF719A6880A99AA302056D4E2F04E4262DEBFDC3FFB1CD45561F766B73AA7A5C543F4959D7C343C9D206D4622F4A501E724DD39DF515F933B391F20FE1688F2EEBC568BCC2FFFFF134BC64D03CD9690806FD3ADFEDE25CAE54FE613152A99B312C14BE17A3E5C27A84C74C9D7B53C5135E76D3B82B8E140E4986DAF189847DC3EBF09C2855E941918BBB01052FBA7F7E77182EE0301E1E6A48F097BFBC03D1B3DAF4BF61F388453703430CD12A4DC470C5EB9715D5218B06EA3C0AD56DC83913B4AE340AFECC6384753D41ED64EBE391297CFB953EC2213DF4FC271379128A03E34CE9136A1CB03C4E701AC7251C06BBB9A21006A10D767E20643D521E34DFB079A2EE6C3CE7368F462609219F27C2298F5E152031B23D704BB066CF229E92A4B79141AFB2FEB380B0683C1ECCC349CD2E01CD369C2FCAE90D47420FC59D3F8CF087E1470B4CC417F393BF416B11A94A5D2A2E4657FF76B0070E960EA5911E7D76296C9362A448DAD3A8D70CFA79413FD0DB2BEA280BDBE231A8ADD75DE683748CEFFEA74C3668417DC9847DE3CC768FEAEDEE12C7103AC54002F046B7D878E3C85BA2D8720C5DADF1B0A6447680C0833E30F1ED22D12772AB8473E0BDDEF44AC7BE2CC8D8391F789077DE29F1328623DBF748FE06BF5110407185132855473BBD9F13BCAFE59652E7E6324F30BCA4B06F0C7F4EDA4BF21B3E8B25F407FC12811C61CDD1BE5DF4E71D023BBD1FBB14522B09C8464513D791E8D79296709CDE2721B5E8F3EB3FBA2011EA8683CD42B6B095C9F360F558E368F39F8B9744AAF7697B974705FB89BC9937ACCF9E0B30093918F541619350ABFAC6C02F363223B82FE0EE5817EF821F82CCD0198629E6EA4DD06BFD49C7FD6744259BCDDA13BE5680AAD7F814D7EF0FE2DDC4704322C229620624A154248E823B399DB68D54370AA6F75395AE1CE259FCFADCA3E35C95D857D3BF82E7C05C244E2767CCBD8305C610EE42155FBDD7A61CE065E546655CBE24814A52B47184AC3D715D7DC6371836A1E026B5BF395D5C45CB97DFA6AAF4DA58E901910AAD13882CB732CEAD564894F020FD30726855773994978A757F98F3254DFB8178281AE4A7CE31DE8A5988ACA71BE630AB828EFF44FA422C8303DD8B676F0542C7A945A13F537A856586A1C7516CB9FA6ECA44F929BCF1E3B6D5D2E307C98C6C64F1115BA3A447B2A68305DED4522E8A4AE057C3630BF48C55FEE4A9ABDFE67C6C28B186EB9CF9DF704DF22029F5993C6EB748D362117DEA0CCE8C7221B5A04CC213B5488619B5C576EA42A6FDB97842B374FEB255047B1C751B41447CE975C3E3A57AE105296655AF7791A1EBD86033D16D223EDC3573C6B33FB2091D4CA7DD21681EA39673889494A9267408A58A0C9C82631DC19C5BF15B5509C1A43698DFF758EF6CE30C13C018775454C74F9849F98187FEB90C5AF30BED890DC06B5EB9A8A7AC970221AC04DE50569AE0FC60E62F01B162F84C3B4EB1377DBA11E1D2C97F7B419012FDACFA13F9B90422C7873BA08C1244A546603F42C880B8E0A248E013972BD9950825848EFDCB9BFCFA23118CAE7D1F5B1834DF825676D44D4BF336EF72C4E1843B78B4D2015F2C60DECED77851E3AE36F0BCE6944DB3981D2C03395D16A5417C467A8093A4F4B074CCFA3C0514D86823A7D71E50C3EB48FF3F16889F2B040EDF093CBBC81E2864AB82CACE5E41416BEDD12DA21B148BE0476442A707023BF9AEF47870E1F712DC962C08C19AC9823C0A063B53A6E3C849F9301EC58D26B85CA99BFC3CC01495381FDB4522C70B70479B6669805CB20C1649B3C2AFC50F98F47559EDC0B2D7E6FDE7FF307438BD210A79E1415ADC7BAA6453D63487812A7D36F23576118FC8C9B92DCFD709185530586CBD440328D6CEDC9FEEBEDCAFF108352F6298EFC66ECB27A9D5F59749E6264180B17A8FCA6B841FAC52564D751015D935F89DBF4E50D346F7B9DBABCCC353F431D9F4C9C822315F2C60DC13AAAF58EFD9689D7B30B4C57EB2467C5A4A7CDC48998915CB2378015C8FB273467205318BBEA6B0BC55B26CB13F3B12A78FD21FD5227BE059061EF5B0F075EBE32E2C456691F19D00E0414B6E69DEF0A7C7E6D3A93521FAB0DCD6871215B7DA1FEF192375777BB7B44A5BE45FD71BBD321E5D202B0CF10161E1616EB79C8C6CFF2707036C7E4C91037B8B9D51C2DD29B8E3EE7469C78C5C2C550021FC404A3935D8516A23063F0676528C11A8D6561E08DE77C033E9EA06BEF33F67B3B8F105244146CA4AE6CA4062CBE93AA99804E1D4C1B85F0F3FC0D469B5EB92128981A99531051F6572EAC8F8ABC5CC9429376625F964B7E5B62436BDD14200BE2B2F2DB0245777A4F1111FEE9837507D819AA0428465EAED5740C10B8EA55A17D6CB5B4C26213DD86DF4AD36A6BCA7BA64FF5843818E9A070DC5D874DC4FBA99250CD1101FCD63D44BF0667559AAF11680F903EED7DD08BDC473B5A54661857C3F559719489E81696C524BDAB321A285B83EB1B61B222E831EDC396BD0CDEE62962F81CDFF45570FE1503BAE9C39E9B8308D30065482BC6B894F21CFDB5B7ED53FDBD937D423491F52EDF2DB7F29DE97ACDC1632BE3DFCF708CB201BACA2FB03DD37B5E5913BD3B8E0EA2073669633503C7890346432784C46B16BD3B157E5A0CED5829DA601A23876F9416BD2FA9709AFF1D4092C58AE01C035F8E7A383922270FF3546C2251A0C9F3FC971990E24C8F33EE253E0B23926DD2DAE12C7C235375B19768563BFB6FC70248D719D82D56E7E7D13495F666D34762F25E0C979C10A09ECDCE24CC93FE3E62E28B4F7A640D0F79B84C70FFA689284DE11AFFCA214655ABFB40C31AAE6D5CE8B1724F2E92F365824888BCDE16A3281616774588853F30C070274B469A2AE59DD420E715A98DCE657C4A523F35E04A2E76C6EB0B7FCD3CFA5049C872B673445D99FFAB3722261BCAE95EBB09ACA326435EEBFDAA1B07B724BB2DD0D5C37732FAC596BD1809966B7231D951616587F5C84DBFB92FA5D02CED021F89B83A50671C57EBE5D460521D884484D42032EC8F1439AC70B71EC66B4C483964F2561B89410D5A98248AF50BD7ACA0494E5AA0880A0AA512166EC88862D992365354F7ED67CB05ADD0F9A3BF875F2E6B460CE27CFE24950D684EEF998C51AA44AA6FADC800FE1F2AD8E8AACD2DB64D7743D92B4B690F2163E63BBDAB22318865557D10CC58899A228C15FCA15BEC1A5A70037B7EE63475DC2DE7A5743C60C89C192BD700594197ACF9046C11D85324BFDE39D8ED876319F37B2A6DDACD876946AE238F39DF347DCB8898EB6B44AE8425524DF61278BE4865B085514FC1E2190649E66330D36B1DF3BAAED3769BAF337D11BC4F822776231C716D553CEBF2851843BBAB73BB38CBB78F57A1162EAD302046FDD556FA839F0A3038281F3FA77A746FF899B378960E655CC953FDDFD20B3C994F8F1E73704FC0812D92480FD44C50A6577B1E4979B108011BD92F3A108FECBBE258E4143FD5805549A7499CE67E3320AFB6B2149396895A25F27E3C126BC8349E9D0CDCEF305B243F984D0E97C7470F27A93EB13410B549D46D1E77D09AF4C52D223D4B6B2F8004A44ABD99C5D52D2D09ECD6E25B679414CD096FC2433090EA905629EF916C737C59776B21836435C1E196C38BFFACD4B4C07871E8E06F8ED8C3CED166CF369EC19D28257FBFB88ECCF66C3D242817174DEFE91CA4B1C8DB085CC49282A21550F5E47902DF71B267E3264C784B8E28A9A05133D862E0293E89C0156A5D24E4F37438E5658CFB1F801C13705AE6C78F63DFC40D64A339EDA2AEF46A2AD002E500A8305E06DEBF4FAFB27A4780F25FE9DEC7B65922207E88D481DACBBE82816B05C005DCCE51DD25AC3DB0DEEA2DF66F7245771131AA0D8A2F433109D41155ABA790F1B816B250BCA0F9A3EEC98A0819778CEA890A69B99BA21165A70E002EABEFB56481E382C546609E003F33BA20D4DDFD844427A8533A766C3DAD572F498D8F6A8F721C7951A6BCF06CE5A5C0CBD645C3238B18139CE25B453FF65BAA3EBC7C350083066D601391564B796ADE96A08AA5F2B182707966735196C45DD4064F2F3B0AA785331F3E9F47E5F955B9CDD7436158E934A7BDB8FD3BD833F45C0FD27EDE212A03513B052BAB2F42BEB44522C4CA872A20560E42A298EE17D0FE1287BCFEC229EC749FDAB159475669834D7B757AA79E58FCB377523492A671024516EC684C51A0DB21B9D01DE602D37ABF813C05100484FC5FBBCAEB6B71CFFB7257630521DA07D307DDBF52E27B75FD883D77A42EB293413705FFB6187AA70D25CD2711200CA07D5E9A31F28BB30E7F6838653D43B944B4E65AC11886CC9B26296657E7F0C7687292725FEFDA9DA58E4726F2AD07EFF1919E9BA90194E24A696498A0AD809EA68CCBF18D26B63043DA04971751638BC279E0F3F5EDBF299A2B72E5AF1CD10EDE4F95AC5702422645D10FC9B5560F15942784CE9B682BB5EC69C3B014356135AE23DF321663B3BC63E69F16F19CA8A0282200D23F305DC2195C23CB384ABAD8F32D9528FCF6B6A97B7888F025976FFDA20AA10D289D4EFAB045E26251B7CD8E825ABFE23B12E387F72FC2E6A6587C487A7AEAD654936F96BEE7660179D70F6C0CE815BF809A07E685C4D6ED55FB59873767F6A31038BC34A2A15779591F6CD26D18D8AE4C7279F7AD0EF16783DCD76CF96E20DFEC44D1D0F0F8B8F7456599E4270C5EFDC2C6517B9E301BBE3F0FCC748AE575A60DFF487284AA00B03273F58331CA12DA30337F13368469126CDFC1BEB4E01E5E4C147D57CDA4BCB507B91A9AA8A4B4FE7123FA1529DA6B27A1273D180A979083EE0A7BEEC8C2D004DBF62F8E14D725AE61B3FBADFCCF2F0E02D9800C4286F0482E0588ACF7117739ECABC6020D8F410ACBE79C8B9D054F73E26EE9933D1A469A390397C3F02FB380F0209FB64D52FAEBD78A865E3AFEB78A7CD5C066DF1635E88AD53ACB85EC332FAF5D7B281A2D2DA291E2A3A80DF3C0D0DB96B51DE169E8F139CACEFE3BE80760E169FF1653DA92E6DCCFF953E90B0FC103821FA6088E15F5552B21EA88B7535EE63302603D62BCB891F4A684405CD446913197713E86F8A3C4326C4C86B92A9414F641EC4901C876ABD1AD79B305CB098A0C60F8832279832123C297F076DEF36A0CF4A3E31525BD1B78FEF5A56573C86BA59FDDAF639D4CCDFA19192A57F11BAEAACA57215E76E5FF0423913326DA84D41031ADBDBA712AF3A691319E61B8FDBFF448138C85387483313AB414F833F3480A49BAF90229FB76BF5BE02F16B710921803BA4B7E34976567FFBF54089923CB1A647765014550CF603F144E90E20948DE33676E937AE5818584D71E96D51839E4B5B248531C48AB4403E3354821852CB6D5B16907CE63CBB1094FC7E5AF67C4E915ED116A834EA20C585189D430402D057B6ECC76AD7BF5C9398B6644122FC8E810D3AD83C04BE4813E435430F198392A6AC8D36586393B33C5300A7CDD85C1DF94E3997D7E16FEE0EB039319BEA33F2D2404FD31DA586AA1F663019E40F1827AD9C3B40D64FB72E187DF8F9834C26A11A1F32BDA51464EC2E7E39216B424EA47F16550E8828ECE96830896D620DFFCD216CFF05B109D4BAB63E8BAAE7F79DAB22D1C3F1292787A9D545DA4F2C572B2372C354558778AE8C6ED4B67B2402DEB84EB4B20BD4BBAA329ECD3FC4338A8092428749A887498482ACBBAA2F8587AA1B43C4568ED34481D4F66CEAECA952519326A36F129EF5C959F49022196356FD77884E5D00CDC31179FE8CD92A7A966B4CDEC4BD9FF3C55E394969F8AA3868A7CFA63B8421A3FFC98006190B2A94112998177B7CC12009B3F2D4AE864CE07AC6DD3FEE455387F219D1A0832CC588B47961AA4686FBB955FB4EF1796A8DDE56BCE95EBBB69FE98BD53857CAE5DE2C5DCB6D5BEFF90993F9C7CB1A1640763A434293131E89EB2B28AAF1AD0A56E8AEDCB8EBAA333F5B7FD1AD94F9EBDBB37C2D2B87B0A64689D46F3A2004BD8FFA58C3DBD7321BDEAEB275B906758BA7A19FFD41FB667A0FAD9D7C334B7FAE8DB812A743994D5DA2A037E6DE69A37F3646CCEB0413600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/EVVRXT+Como-Bold cguidfix
/F2.1/EVVRXT+Como-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
0.60000002 i
q
50 0 213 17 rc
1 0 0 -1 50 17 cm
/F1.1[ 14 0 0 -14 0 0]sf
0 14 m
(!"#$%&'\("&\)*$'+$\(*\)+,$-&./0"-$+--&.)[ 7.420000 7.336000 7.784000 2.702000 7.826000 3.584000 7.784000 7.784000 7.336000 3.584000 5.642000 7.784000 2.702000 7.784000 7.098000 2.702000 7.784000 7.784000 5.642000 7.098000 2.968000 2.702000 6.076000 3.584000 11.494000 7.728000 3.584000 7.336000 6.076000 2.702000 7.098000 6.076000 6.076000 3.584000 0.000000 ] xS
Q
q
0 0 263 66 rc
41 0 0 38 -1 22 cm
BI
/Width 123
/Height 114
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$
OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3
JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3
JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$
OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3
JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3
JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$
OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3
JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3
JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$
OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3JcC<$OT0n3JcCi3J,
~> %APLeod
EI
Q
q
0.2 44.886215 m
0.2 47.707325 2.5209558 49.994289 5.3839998 49.994289 c
8.2470446 49.994289 10.568 47.707325 10.568 44.886215 c
10.568 28.028074 l
10.568 25.206963 8.2470446 22.92 5.3839998 22.92 c
2.5209558 22.92 0.2 25.206963 0.2 28.028074 c
0.2 44.886215 l
h
14.456 53.721664 m
14.456 56.592625 16.776957 58.919998 19.639999 58.919998 c
22.503044 58.919998 24.823999 56.592625 24.823999 53.721664 c
24.823999 28.118336 l
24.823999 25.247374 22.503044 22.92 19.639999 22.92 c
16.776957 22.92 14.456 25.247374 14.456 28.118336 c
14.456 53.721664 l
h
28.712 59.571926 m
28.712 62.393036 31.032955 64.68 33.896 64.68 c
36.759045 64.68 39.080002 62.393036 39.080002 59.571926 c
39.080002 28.028074 l
39.080002 25.206963 36.759045 22.92 33.896 22.92 c
31.032955 22.92 28.712 25.206963 28.712 28.028074 c
28.712 59.571926 l
h
W
0 0 263 66 rc
-4.8000002 69.68 m
44.080002 69.68 l
44.080002 17.92 l
-4.8000002 17.92 l
h
f
Q
q
0 0 263 66 rc
1 0 0 -1 49.52 69 cm
/F2.1[ 57.599998 0 0 -57.599998 0 0]sf
0 45.52 m
(!"#"$%)[ 48.614400 34.963200 33.235200 34.963200 30.470400 0.000000 ] xS
ep
end
